C51 COMPILER V9.60.7.0   TIMER0                                                            07/13/2023 13:51:45 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TIMER0
OBJECT MODULE PLACED IN .\Objects\timer0.obj
COMPILER INVOKED BY: D:\keil_arm\C51\BIN\C51.EXE timer0.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\t
                    -imer0.lst) OBJECT(.\Objects\timer0.obj)

line level    source

   1          #include "timer0.h"
   2          #include <REGX52.H>
   3          void Timer0_Init_1(void)
   4          {
   5   1              TMOD &= 0xF0; // 设置定时器模式
   6   1              TMOD |= 0x01; // 设置定时器模式
   7   1              TL0 = 0xCD;       // 设置定时初始值
   8   1              TH0 = 0xD4;       // 设置定时初始值
   9   1              TF0 = 0;          // 清除TF0标志
  10   1              TR0 = 1;          // 定时器0开始计时
  11   1              ET0 = 1;          // 使能定时器0中断
  12   1              EA = 1;
  13   1              PT0 = 0;
  14   1              PT0H = 0;
  15   1      }
  16          
  17          // void Timer0_Init()
  18          // {
  19          //     //TMOD = 0x01; // 16位计数器
  20          //     TMOD&=0xF0;
  21          //     TMOD |= 0x01;
  22          //     TF0 = 0;
  23          //     TR0 = 1;           // 允许T0开始计数
  24          //     TH0 = 64535 / 256; // 高8位
  25          //     TL0 = 64535 % 256; // 低8位
  26          //     ET0 = 1;           // 允许溢出中断
  27          //     EA = 1;            // 开放中断
  28          //     PT0 = 0;
  29          //     PT0H = 0;
  30          // }
  31          // void Timer2_Init(void)               //1毫秒@11.0592MHz
  32          // {
  33          //      T2MOD = 0;                              //初始化模式寄存器
  34          //      T2CON = 0;                              //初始化控制寄存器
  35          //      TL2 = 0x66;                             //设置定时初始值
  36          //      TH2 = 0xFC;                             //设置定时初始值
  37          //      RCAP2L = 0x66;                  //设置定时重载值
  38          //      RCAP2H = 0xFC;                  //设置定时重载值
  39          //      TR2 = 1;                                //定时器2开始计时
  40          // }
  41          
  42          // unsigned int T_count;
  43          // void Timer0_Routine() interrupt 1
  44          // {
  45          //     TH0 = 65545 / 256; // 高8位
  46          //     TL0 = 65545 % 256; // 低8位
  47          //     T_count++;
  48          //     if (T_count >= 1000)
  49          //     {
  50          //         P2_0 = ~P2_0;
  51          //     }
  52          // }
  53          // void Timer0_Isr(void) interrupt 1
  54          // {
C51 COMPILER V9.60.7.0   TIMER0                                                            07/13/2023 13:51:45 PAGE 2   

  55          //      static unsigned int T_count;
  56          //      TL0 = 0xCD; // 设置定时初始值
  57          //      TH0 = 0xD4; // 设置定时初始值
  58          //      T_count++;
  59          //      if (T_count >= 30) // 83
  60          //      {
  61          //              T_count = 0;
  62          //              if (ledMode == 0)
  63          //              {
  64          //                      P2 = _crol_(P2, 1); // 左移
  65          //              }
  66          //              if (ledMode == 1)
  67          //              {
  68          //                      P2 = _cror_(P2, 1); // 右移
  69          //              }
  70          //      }
  71          // }
  72          void Timer0_Init_2(void)
  73          {
  74   1              TMOD &= 0xF0; // 设置定时器模式
  75   1              TMOD |= 0x01; // 设置定时器模式
  76   1              TL0 = 0;          // 设置定时初始值
  77   1              TH0 = 0;          // 设置定时初始值
  78   1              TF0 = 0;          // 清除TF0标志
  79   1              TR0 = 0;          // 定时器0开始计时
  80   1      }
  81          void timer0_SetCounter(unsigned int Value)
  82          {
  83   1              TH0 = Value / 256;
  84   1              TL0 = Value % 256;
  85   1      }
  86          unsigned int Timer0_GetCounter()
  87          {
  88   1              return (TH0 << 8) | TL0;
  89   1      }
  90          void Timer0_Run(unsigned char flag)
  91          {
  92   1              TR0 = flag;
  93   1      
  94   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     67    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
